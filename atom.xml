<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Miao Hancheng&#39;s Blog</title>
  
  
  <link href="https://miaohancheng.github.io/atom.xml" rel="self"/>
  
  <link href="https://miaohancheng.github.io/"/>
  <updated>2025-03-09T13:34:37.538Z</updated>
  <id>https://miaohancheng.github.io/</id>
  
  <author>
    <name>Miao Hancheng</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>机器学习+深度学习量化</title>
    <link href="https://miaohancheng.github.io/2025/03/08/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0+%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E9%87%8F%E5%8C%96/"/>
    <id>https://miaohancheng.github.io/2025/03/08/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0+%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E9%87%8F%E5%8C%96/</id>
    <published>2025-03-08T15:00:00.000Z</published>
    <updated>2025-03-09T13:34:37.538Z</updated>
    
    <content type="html"><![CDATA[<h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>最近在港股美股上的收益还可以，但是在择时能力上感觉靠人的判断没有特别的准确，希望通过量化的方式去帮助择时，也不希望做高频，只希望高抛低吸做t的时候可以更准确</p><h3 id="调研"><a href="#调研" class="headerlink" title="调研"></a>调研</h3><p>一开始尝试了bigquant，发现需要开会员才能用到比较高级的因子和策略，所以找了下开源的量化回测框架和数据<br>目前采用的是以下几个库：</p><ol><li><a href="https://github.com/TA-Lib/ta-lib-python:">talib</a></li><li><a href="https://github.com/mementum/backtrader">backtrader</a></li><li><a href="https://github.com/akfamily/akshare">akshare</a></li><li><a href="https://github.com/edtechre/pybroker">pybroker</a></li></ol><p>目前做到的是用机器学习和深度学习来做未来涨跌的判定，dnn&#x2F;gnn的情况还在研究，因为构造数据集和回测框架的兼容上比机器学习难度大一些；</p><h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><p>特征粗略制作，样本就挑选了一个a股为例</p><h4 id="交易图表："><a href="#交易图表：" class="headerlink" title="交易图表："></a>交易图表：</h4><p><img src="https://github.com/miaohancheng/picx-images-hosting/raw/master/pics/backtrader_plot.7axbcmuk0o.webp" alt="汇总结论"></p><h4 id="执行过程"><a href="#执行过程" class="headerlink" title="执行过程"></a>执行过程</h4><ol><li>模型训练+分步减仓<br><img src="https://github.com/miaohancheng/picx-images-hosting/raw/master/pics/%E6%89%A7%E8%A1%8C%E8%BF%87%E7%A8%8B.7snd18d7o4.webp" alt="减仓"></li><li>模型训练+止损<br><img src="https://github.com/miaohancheng/picx-images-hosting/raw/master/pics/%E6%AD%A2%E6%8D%9F.26lmndbwuu.webp" alt="止损"></li></ol><h4 id="数据表现："><a href="#数据表现：" class="headerlink" title="数据表现："></a>数据表现：</h4><ul><li>最终资金: 1,483,439.88 CNY （初始资金：1,000,000.00 CNY）</li><li>回测时间：2018-01-01 至 2025-03-01 的 大A</li><li>年化夏普比率: 0.51</li><li>最大回撤: 30.80% (持续 489 天)</li><li>年化收益率: 5.90%（只能跑赢通胀）</li></ul><h3 id="代码思路："><a href="#代码思路：" class="headerlink" title="代码思路："></a>代码思路：</h3><p>初始化引入：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> os<span class="token keyword">import</span> warnings<span class="token keyword">import</span> logging<span class="token keyword">import</span> akshare <span class="token keyword">as</span> ak<span class="token keyword">import</span> backtrader <span class="token keyword">as</span> bt<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token keyword">import</span> talib <span class="token keyword">as</span> ta<span class="token keyword">from</span> collections <span class="token keyword">import</span> Counter<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>model_selection <span class="token keyword">import</span> train_test_split<span class="token keyword">from</span> imblearn<span class="token punctuation">.</span>over_sampling <span class="token keyword">import</span> SMOTE<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>preprocessing <span class="token keyword">import</span> StandardScaler<span class="token keyword">import</span> torch<span class="token keyword">import</span> torch<span class="token punctuation">.</span>nn <span class="token keyword">as</span> nn<span class="token keyword">import</span> torch<span class="token punctuation">.</span>optim <span class="token keyword">as</span> optim<span class="token comment"># ----------------------- 日志设置与警告屏蔽 -----------------------</span>DEBUG <span class="token operator">=</span> <span class="token boolean">False</span><span class="token keyword">if</span> DEBUG<span class="token punctuation">:</span>    logging<span class="token punctuation">.</span>basicConfig<span class="token punctuation">(</span>level<span class="token operator">=</span>logging<span class="token punctuation">.</span>DEBUG<span class="token punctuation">,</span> <span class="token builtin">format</span><span class="token operator">=</span><span class="token string">'%(asctime)s %(levelname)s: %(message)s'</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    logging<span class="token punctuation">.</span>basicConfig<span class="token punctuation">(</span>level<span class="token operator">=</span>logging<span class="token punctuation">.</span>INFO<span class="token punctuation">,</span> <span class="token builtin">format</span><span class="token operator">=</span><span class="token string">'%(asctime)s %(levelname)s: %(message)s'</span><span class="token punctuation">)</span>logger <span class="token operator">=</span> logging<span class="token punctuation">.</span>getLogger<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span>warnings<span class="token punctuation">.</span>filterwarnings<span class="token punctuation">(</span><span class="token string">"ignore"</span><span class="token punctuation">,</span> category<span class="token operator">=</span>UserWarning<span class="token punctuation">)</span>warnings<span class="token punctuation">.</span>filterwarnings<span class="token punctuation">(</span><span class="token string">"ignore"</span><span class="token punctuation">,</span> category<span class="token operator">=</span>FutureWarning<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="模型构建"><a href="#模型构建" class="headerlink" title="模型构建:"></a>模型构建:</h4><ol><li><p>transfromer</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">## ----------------------- Transformer模型定义 -----------------------</span><span class="token keyword">class</span> <span class="token class-name">TransformerClassifier</span><span class="token punctuation">(</span>nn<span class="token punctuation">.</span>Module<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> input_dim<span class="token punctuation">,</span> nhead<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> num_encoder_layers<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> dim_feedforward<span class="token operator">=</span><span class="token number">64</span><span class="token punctuation">,</span> dropout<span class="token operator">=</span><span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token builtin">super</span><span class="token punctuation">(</span>TransformerClassifier<span class="token punctuation">,</span> self<span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment"># 如果 input_dim 不能被 nhead 整除，则增加一个线性层映射到新维度</span>        <span class="token keyword">if</span> input_dim <span class="token operator">%</span> nhead <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">:</span>            new_input_dim <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>input_dim <span class="token operator">//</span> nhead<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> nhead            self<span class="token punctuation">.</span>input_proj <span class="token operator">=</span> nn<span class="token punctuation">.</span>Linear<span class="token punctuation">(</span>input_dim<span class="token punctuation">,</span> new_input_dim<span class="token punctuation">)</span>            d_model <span class="token operator">=</span> new_input_dim        <span class="token keyword">else</span><span class="token punctuation">:</span>            self<span class="token punctuation">.</span>input_proj <span class="token operator">=</span> <span class="token boolean">None</span>            d_model <span class="token operator">=</span> input_dim        encoder_layer <span class="token operator">=</span> nn<span class="token punctuation">.</span>TransformerEncoderLayer<span class="token punctuation">(</span>d_model<span class="token operator">=</span>d_model<span class="token punctuation">,</span> nhead<span class="token operator">=</span>nhead<span class="token punctuation">,</span>                                                   dim_feedforward<span class="token operator">=</span>dim_feedforward<span class="token punctuation">,</span> dropout<span class="token operator">=</span>dropout<span class="token punctuation">,</span> batch_first<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>transformer_encoder <span class="token operator">=</span> nn<span class="token punctuation">.</span>TransformerEncoder<span class="token punctuation">(</span>encoder_layer<span class="token punctuation">,</span> num_layers<span class="token operator">=</span>num_encoder_layers<span class="token punctuation">)</span>        <span class="token comment"># 分类层</span>        self<span class="token punctuation">.</span>fc <span class="token operator">=</span> nn<span class="token punctuation">.</span>Linear<span class="token punctuation">(</span>d_model<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">forward</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># x: (batch_size, seq_length, input_dim)</span>        <span class="token keyword">if</span> self<span class="token punctuation">.</span>input_proj <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>            x <span class="token operator">=</span> self<span class="token punctuation">.</span>input_proj<span class="token punctuation">(</span>x<span class="token punctuation">)</span>        transformer_out <span class="token operator">=</span> self<span class="token punctuation">.</span>transformer_encoder<span class="token punctuation">(</span>x<span class="token punctuation">)</span>  <span class="token comment"># (batch_size, seq_length, d_model)</span>        pooled <span class="token operator">=</span> transformer_out<span class="token punctuation">.</span>mean<span class="token punctuation">(</span>dim<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>             <span class="token comment"># (batch_size, d_model)</span>        output <span class="token operator">=</span> self<span class="token punctuation">.</span>fc<span class="token punctuation">(</span>pooled<span class="token punctuation">)</span>        <span class="token keyword">return</span> torch<span class="token punctuation">.</span>sigmoid<span class="token punctuation">(</span>output<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>Bilstm+Attention</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># ------------------ 定义 BiLSTM+Attention 模型 ------------------</span><span class="token keyword">class</span> <span class="token class-name">BiLSTMAttention</span><span class="token punctuation">(</span>nn<span class="token punctuation">.</span>Module<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> input_dim<span class="token punctuation">,</span> hidden_dim<span class="token punctuation">,</span> num_layers<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token builtin">super</span><span class="token punctuation">(</span>BiLSTMAttention<span class="token punctuation">,</span> self<span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>hidden_dim <span class="token operator">=</span> hidden_dim        self<span class="token punctuation">.</span>num_layers <span class="token operator">=</span> num_layers        self<span class="token punctuation">.</span>lstm <span class="token operator">=</span> nn<span class="token punctuation">.</span>LSTM<span class="token punctuation">(</span>input_dim<span class="token punctuation">,</span> hidden_dim<span class="token punctuation">,</span> num_layers<span class="token operator">=</span>num_layers<span class="token punctuation">,</span> batch_first<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> bidirectional<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>        <span class="token comment"># 注意力层：将每个时刻的输出映射为一个得分</span>        self<span class="token punctuation">.</span>attn_layer <span class="token operator">=</span> nn<span class="token punctuation">.</span>Linear<span class="token punctuation">(</span>hidden_dim <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>fc <span class="token operator">=</span> nn<span class="token punctuation">.</span>Linear<span class="token punctuation">(</span>hidden_dim <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">forward</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># x: (batch_size, seq_length, input_dim)</span>        lstm_out<span class="token punctuation">,</span> _ <span class="token operator">=</span> self<span class="token punctuation">.</span>lstm<span class="token punctuation">(</span>x<span class="token punctuation">)</span>  <span class="token comment"># (batch_size, seq_length, hidden_dim*2)</span>        attn_scores <span class="token operator">=</span> self<span class="token punctuation">.</span>attn_layer<span class="token punctuation">(</span>lstm_out<span class="token punctuation">)</span>  <span class="token comment"># (batch_size, seq_length, 1)</span>        attn_weights <span class="token operator">=</span> torch<span class="token punctuation">.</span>softmax<span class="token punctuation">(</span>attn_scores<span class="token punctuation">,</span> dim<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>  <span class="token comment"># (batch_size, seq_length, 1)</span>        context <span class="token operator">=</span> torch<span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span>attn_weights <span class="token operator">*</span> lstm_out<span class="token punctuation">,</span> dim<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>  <span class="token comment"># (batch_size, hidden_dim*2)</span>        output <span class="token operator">=</span> self<span class="token punctuation">.</span>fc<span class="token punctuation">(</span>context<span class="token punctuation">)</span>  <span class="token comment"># (batch_size, 1)</span>        output <span class="token operator">=</span> torch<span class="token punctuation">.</span>sigmoid<span class="token punctuation">(</span>output<span class="token punctuation">)</span>        <span class="token keyword">return</span> output<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h4 id="模型训练"><a href="#模型训练" class="headerlink" title="模型训练"></a>模型训练</h4><ol><li><p>transformer</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">train_transformer_model</span><span class="token punctuation">(</span>X_train_seq<span class="token punctuation">,</span> y_train_seq<span class="token punctuation">,</span> X_val_seq<span class="token punctuation">,</span> y_val_seq<span class="token punctuation">,</span> input_dim<span class="token punctuation">,</span>                            nhead<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> num_encoder_layers<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> dim_feedforward<span class="token operator">=</span><span class="token number">64</span><span class="token punctuation">,</span> dropout<span class="token operator">=</span><span class="token number">0.1</span><span class="token punctuation">,</span>                            epochs<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">,</span> batch_size<span class="token operator">=</span><span class="token number">32</span><span class="token punctuation">,</span> patience<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    X_train_tensor <span class="token operator">=</span> torch<span class="token punctuation">.</span>tensor<span class="token punctuation">(</span>X_train_seq<span class="token punctuation">,</span> dtype<span class="token operator">=</span>torch<span class="token punctuation">.</span>float32<span class="token punctuation">)</span>    y_train_tensor <span class="token operator">=</span> torch<span class="token punctuation">.</span>tensor<span class="token punctuation">(</span>y_train_seq<span class="token punctuation">,</span> dtype<span class="token operator">=</span>torch<span class="token punctuation">.</span>float32<span class="token punctuation">)</span><span class="token punctuation">.</span>unsqueeze<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>    X_val_tensor <span class="token operator">=</span> torch<span class="token punctuation">.</span>tensor<span class="token punctuation">(</span>X_val_seq<span class="token punctuation">,</span> dtype<span class="token operator">=</span>torch<span class="token punctuation">.</span>float32<span class="token punctuation">)</span>    y_val_tensor <span class="token operator">=</span> torch<span class="token punctuation">.</span>tensor<span class="token punctuation">(</span>y_val_seq<span class="token punctuation">,</span> dtype<span class="token operator">=</span>torch<span class="token punctuation">.</span>float32<span class="token punctuation">)</span><span class="token punctuation">.</span>unsqueeze<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>    model <span class="token operator">=</span> TransformerClassifier<span class="token punctuation">(</span>input_dim<span class="token punctuation">,</span> nhead<span class="token punctuation">,</span> num_encoder_layers<span class="token punctuation">,</span> dim_feedforward<span class="token punctuation">,</span> dropout<span class="token punctuation">)</span>    criterion <span class="token operator">=</span> nn<span class="token punctuation">.</span>BCELoss<span class="token punctuation">(</span><span class="token punctuation">)</span>    optimizer <span class="token operator">=</span> optim<span class="token punctuation">.</span>Adam<span class="token punctuation">(</span>model<span class="token punctuation">.</span>parameters<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> lr<span class="token operator">=</span><span class="token number">0.001</span><span class="token punctuation">)</span>    best_val_loss <span class="token operator">=</span> <span class="token builtin">float</span><span class="token punctuation">(</span><span class="token string">'inf'</span><span class="token punctuation">)</span>    epochs_no_improve <span class="token operator">=</span> <span class="token number">0</span>    best_model_state <span class="token operator">=</span> <span class="token boolean">None</span>    <span class="token keyword">for</span> epoch <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>epochs<span class="token punctuation">)</span><span class="token punctuation">:</span>        model<span class="token punctuation">.</span>train<span class="token punctuation">(</span><span class="token punctuation">)</span>        permutation <span class="token operator">=</span> torch<span class="token punctuation">.</span>randperm<span class="token punctuation">(</span>X_train_tensor<span class="token punctuation">.</span>size<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        train_loss <span class="token operator">=</span> <span class="token number">0</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> X_train_tensor<span class="token punctuation">.</span>size<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> batch_size<span class="token punctuation">)</span><span class="token punctuation">:</span>            optimizer<span class="token punctuation">.</span>zero_grad<span class="token punctuation">(</span><span class="token punctuation">)</span>            indices <span class="token operator">=</span> permutation<span class="token punctuation">[</span>i<span class="token punctuation">:</span>i<span class="token operator">+</span>batch_size<span class="token punctuation">]</span>            batch_x <span class="token operator">=</span> X_train_tensor<span class="token punctuation">[</span>indices<span class="token punctuation">]</span>            batch_y <span class="token operator">=</span> y_train_tensor<span class="token punctuation">[</span>indices<span class="token punctuation">]</span>            outputs <span class="token operator">=</span> model<span class="token punctuation">(</span>batch_x<span class="token punctuation">)</span>            loss <span class="token operator">=</span> criterion<span class="token punctuation">(</span>outputs<span class="token punctuation">,</span> batch_y<span class="token punctuation">)</span>            loss<span class="token punctuation">.</span>backward<span class="token punctuation">(</span><span class="token punctuation">)</span>            optimizer<span class="token punctuation">.</span>step<span class="token punctuation">(</span><span class="token punctuation">)</span>            train_loss <span class="token operator">+=</span> loss<span class="token punctuation">.</span>item<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> batch_x<span class="token punctuation">.</span>size<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>        train_loss <span class="token operator">/=</span> X_train_tensor<span class="token punctuation">.</span>size<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>        model<span class="token punctuation">.</span><span class="token builtin">eval</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">with</span> torch<span class="token punctuation">.</span>no_grad<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            val_outputs <span class="token operator">=</span> model<span class="token punctuation">(</span>X_val_tensor<span class="token punctuation">)</span>            val_loss <span class="token operator">=</span> criterion<span class="token punctuation">(</span>val_outputs<span class="token punctuation">,</span> y_val_tensor<span class="token punctuation">)</span><span class="token punctuation">.</span>item<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> val_loss <span class="token operator">&lt;</span> best_val_loss<span class="token punctuation">:</span>            best_val_loss <span class="token operator">=</span> val_loss            best_model_state <span class="token operator">=</span> model<span class="token punctuation">.</span>state_dict<span class="token punctuation">(</span><span class="token punctuation">)</span>            epochs_no_improve <span class="token operator">=</span> <span class="token number">0</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            epochs_no_improve <span class="token operator">+=</span> <span class="token number">1</span>            <span class="token keyword">if</span> epochs_no_improve <span class="token operator">>=</span> patience<span class="token punctuation">:</span>                <span class="token keyword">break</span>    <span class="token keyword">if</span> best_model_state <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>        model<span class="token punctuation">.</span>load_state_dict<span class="token punctuation">(</span>best_model_state<span class="token punctuation">)</span>    model<span class="token punctuation">.</span><span class="token builtin">eval</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">with</span> torch<span class="token punctuation">.</span>no_grad<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        val_preds <span class="token operator">=</span> model<span class="token punctuation">(</span>X_val_tensor<span class="token punctuation">)</span>        val_preds_binary <span class="token operator">=</span> <span class="token punctuation">(</span>val_preds <span class="token operator">>=</span> <span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">float</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        accuracy <span class="token operator">=</span> <span class="token punctuation">(</span>val_preds_binary<span class="token punctuation">.</span>eq<span class="token punctuation">(</span>y_val_tensor<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>item<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> y_val_tensor<span class="token punctuation">.</span>size<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> model<span class="token punctuation">,</span> accuracy<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>BiLSTM+Attention</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">train_bilstm_attention_model</span><span class="token punctuation">(</span>X_train_seq<span class="token punctuation">,</span> y_train_seq<span class="token punctuation">,</span> X_val_seq<span class="token punctuation">,</span> y_val_seq<span class="token punctuation">,</span> input_dim<span class="token punctuation">,</span>                                 hidden_dim<span class="token operator">=</span><span class="token number">32</span><span class="token punctuation">,</span> epochs<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">,</span> batch_size<span class="token operator">=</span><span class="token number">32</span><span class="token punctuation">,</span> patience<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    X_train_tensor <span class="token operator">=</span> torch<span class="token punctuation">.</span>tensor<span class="token punctuation">(</span>X_train_seq<span class="token punctuation">,</span> dtype<span class="token operator">=</span>torch<span class="token punctuation">.</span>float32<span class="token punctuation">)</span>    y_train_tensor <span class="token operator">=</span> torch<span class="token punctuation">.</span>tensor<span class="token punctuation">(</span>y_train_seq<span class="token punctuation">,</span> dtype<span class="token operator">=</span>torch<span class="token punctuation">.</span>float32<span class="token punctuation">)</span><span class="token punctuation">.</span>unsqueeze<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>    X_val_tensor <span class="token operator">=</span> torch<span class="token punctuation">.</span>tensor<span class="token punctuation">(</span>X_val_seq<span class="token punctuation">,</span> dtype<span class="token operator">=</span>torch<span class="token punctuation">.</span>float32<span class="token punctuation">)</span>    y_val_tensor <span class="token operator">=</span> torch<span class="token punctuation">.</span>tensor<span class="token punctuation">(</span>y_val_seq<span class="token punctuation">,</span> dtype<span class="token operator">=</span>torch<span class="token punctuation">.</span>float32<span class="token punctuation">)</span><span class="token punctuation">.</span>unsqueeze<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>    model <span class="token operator">=</span> BiLSTMAttention<span class="token punctuation">(</span>input_dim<span class="token punctuation">,</span> hidden_dim<span class="token punctuation">)</span>    criterion <span class="token operator">=</span> nn<span class="token punctuation">.</span>BCELoss<span class="token punctuation">(</span><span class="token punctuation">)</span>    optimizer <span class="token operator">=</span> optim<span class="token punctuation">.</span>Adam<span class="token punctuation">(</span>model<span class="token punctuation">.</span>parameters<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> lr<span class="token operator">=</span><span class="token number">0.001</span><span class="token punctuation">)</span>    best_val_loss <span class="token operator">=</span> <span class="token builtin">float</span><span class="token punctuation">(</span><span class="token string">'inf'</span><span class="token punctuation">)</span>    epochs_no_improve <span class="token operator">=</span> <span class="token number">0</span>    best_model_state <span class="token operator">=</span> <span class="token boolean">None</span>    <span class="token keyword">for</span> epoch <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>epochs<span class="token punctuation">)</span><span class="token punctuation">:</span>        model<span class="token punctuation">.</span>train<span class="token punctuation">(</span><span class="token punctuation">)</span>        permutation <span class="token operator">=</span> torch<span class="token punctuation">.</span>randperm<span class="token punctuation">(</span>X_train_tensor<span class="token punctuation">.</span>size<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        train_loss <span class="token operator">=</span> <span class="token number">0</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> X_train_tensor<span class="token punctuation">.</span>size<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> batch_size<span class="token punctuation">)</span><span class="token punctuation">:</span>            optimizer<span class="token punctuation">.</span>zero_grad<span class="token punctuation">(</span><span class="token punctuation">)</span>            indices <span class="token operator">=</span> permutation<span class="token punctuation">[</span>i<span class="token punctuation">:</span>i<span class="token operator">+</span>batch_size<span class="token punctuation">]</span>            batch_x <span class="token operator">=</span> X_train_tensor<span class="token punctuation">[</span>indices<span class="token punctuation">]</span>            batch_y <span class="token operator">=</span> y_train_tensor<span class="token punctuation">[</span>indices<span class="token punctuation">]</span>            outputs <span class="token operator">=</span> model<span class="token punctuation">(</span>batch_x<span class="token punctuation">)</span>            loss <span class="token operator">=</span> criterion<span class="token punctuation">(</span>outputs<span class="token punctuation">,</span> batch_y<span class="token punctuation">)</span>            loss<span class="token punctuation">.</span>backward<span class="token punctuation">(</span><span class="token punctuation">)</span>            optimizer<span class="token punctuation">.</span>step<span class="token punctuation">(</span><span class="token punctuation">)</span>            train_loss <span class="token operator">+=</span> loss<span class="token punctuation">.</span>item<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> batch_x<span class="token punctuation">.</span>size<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>        train_loss <span class="token operator">/=</span> X_train_tensor<span class="token punctuation">.</span>size<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>        model<span class="token punctuation">.</span><span class="token builtin">eval</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">with</span> torch<span class="token punctuation">.</span>no_grad<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            val_outputs <span class="token operator">=</span> model<span class="token punctuation">(</span>X_val_tensor<span class="token punctuation">)</span>            val_loss <span class="token operator">=</span> criterion<span class="token punctuation">(</span>val_outputs<span class="token punctuation">,</span> y_val_tensor<span class="token punctuation">)</span><span class="token punctuation">.</span>item<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> val_loss <span class="token operator">&lt;</span> best_val_loss<span class="token punctuation">:</span>            best_val_loss <span class="token operator">=</span> val_loss            best_model_state <span class="token operator">=</span> model<span class="token punctuation">.</span>state_dict<span class="token punctuation">(</span><span class="token punctuation">)</span>            epochs_no_improve <span class="token operator">=</span> <span class="token number">0</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            epochs_no_improve <span class="token operator">+=</span> <span class="token number">1</span>            <span class="token keyword">if</span> epochs_no_improve <span class="token operator">>=</span> patience<span class="token punctuation">:</span>                <span class="token keyword">break</span>    <span class="token keyword">if</span> best_model_state <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>        model<span class="token punctuation">.</span>load_state_dict<span class="token punctuation">(</span>best_model_state<span class="token punctuation">)</span>    model<span class="token punctuation">.</span><span class="token builtin">eval</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">with</span> torch<span class="token punctuation">.</span>no_grad<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        val_preds <span class="token operator">=</span> model<span class="token punctuation">(</span>X_val_tensor<span class="token punctuation">)</span>        val_preds_binary <span class="token operator">=</span> <span class="token punctuation">(</span>val_preds <span class="token operator">>=</span> <span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">float</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        accuracy <span class="token operator">=</span> <span class="token punctuation">(</span>val_preds_binary<span class="token punctuation">.</span>eq<span class="token punctuation">(</span>y_val_tensor<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>item<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> y_val_tensor<span class="token punctuation">.</span>size<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> model<span class="token punctuation">,</span> accuracy<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>辅助函数</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 辅助函数：构造序列数据</span><span class="token keyword">def</span> <span class="token function">create_sequences</span><span class="token punctuation">(</span>X<span class="token punctuation">,</span> y<span class="token punctuation">,</span> seq_length<span class="token punctuation">)</span><span class="token punctuation">:</span>    X_seq<span class="token punctuation">,</span> y_seq <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>X<span class="token punctuation">)</span> <span class="token operator">-</span> seq_length <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        X_seq<span class="token punctuation">.</span>append<span class="token punctuation">(</span>X<span class="token punctuation">[</span>i<span class="token punctuation">:</span>i<span class="token operator">+</span>seq_length<span class="token punctuation">]</span><span class="token punctuation">)</span>        y_seq<span class="token punctuation">.</span>append<span class="token punctuation">(</span>y<span class="token punctuation">[</span>i<span class="token operator">+</span>seq_length<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>X_seq<span class="token punctuation">)</span><span class="token punctuation">,</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>y_seq<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h4 id="特征工程："><a href="#特征工程：" class="headerlink" title="特征工程："></a>特征工程：</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># ----------------------- 特征工程模块 -----------------------</span><span class="token keyword">def</span> <span class="token function">compute_features</span><span class="token punctuation">(</span>close_list<span class="token punctuation">,</span> volume_list<span class="token punctuation">,</span> prediction_window<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""    构造特征数据，返回DataFrame，其中：      - close_list: 按时间顺序排列的收盘价列表（最早在前）      - volume_list: 成交量列表      - prediction_window: 预测窗口（未来N日）    """</span>    df <span class="token operator">=</span> pd<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token string">'close'</span><span class="token punctuation">:</span> close_list<span class="token punctuation">,</span> <span class="token string">'volume'</span><span class="token punctuation">:</span> volume_list<span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    df<span class="token punctuation">[</span><span class="token string">'high'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'close'</span><span class="token punctuation">]</span>    df<span class="token punctuation">[</span><span class="token string">'low'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'close'</span><span class="token punctuation">]</span>    <span class="token comment"># 1. 滞后收益率</span>    <span class="token keyword">for</span> window <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">:</span>        df<span class="token punctuation">[</span><span class="token string-interpolation"><span class="token string">f'rtn_lag_</span><span class="token interpolation"><span class="token punctuation">&#123;</span>window<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'close'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>pct_change<span class="token punctuation">(</span>window<span class="token punctuation">)</span>    <span class="token comment"># 2. 日收益率 &amp; 波动率</span>    df<span class="token punctuation">[</span><span class="token string">'daily_return'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'close'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>pct_change<span class="token punctuation">(</span><span class="token punctuation">)</span>    df<span class="token punctuation">[</span><span class="token string">'volatility_10'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'daily_return'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>rolling<span class="token punctuation">(</span>window<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">.</span>std<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment"># 3. 均线及差值</span>    df<span class="token punctuation">[</span><span class="token string">'ma_20'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'close'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>rolling<span class="token punctuation">(</span>window<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span>    df<span class="token punctuation">[</span><span class="token string">'ma_diff'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'close'</span><span class="token punctuation">]</span> <span class="token operator">/</span> <span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">'ma_20'</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1e-8</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span>    <span class="token comment"># 4. RSI（自定义与TA版本）</span>    delta <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'close'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>diff<span class="token punctuation">(</span><span class="token punctuation">)</span>    gain <span class="token operator">=</span> delta<span class="token punctuation">.</span>clip<span class="token punctuation">(</span>lower<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>    loss <span class="token operator">=</span> <span class="token operator">-</span>delta<span class="token punctuation">.</span>clip<span class="token punctuation">(</span>upper<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>    avg_gain <span class="token operator">=</span> gain<span class="token punctuation">.</span>rolling<span class="token punctuation">(</span><span class="token number">14</span><span class="token punctuation">)</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span>    avg_loss <span class="token operator">=</span> loss<span class="token punctuation">.</span>rolling<span class="token punctuation">(</span><span class="token number">14</span><span class="token punctuation">)</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span>    rs <span class="token operator">=</span> avg_gain <span class="token operator">/</span> <span class="token punctuation">(</span>avg_loss <span class="token operator">+</span> <span class="token number">1e-8</span><span class="token punctuation">)</span>    df<span class="token punctuation">[</span><span class="token string">'rsi_14_custom'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">100</span> <span class="token operator">-</span> <span class="token punctuation">(</span><span class="token number">100</span> <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">+</span> rs<span class="token punctuation">)</span><span class="token punctuation">)</span>    df<span class="token punctuation">[</span><span class="token string">'ta_rsi'</span><span class="token punctuation">]</span> <span class="token operator">=</span> ta<span class="token punctuation">.</span>RSI<span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">'close'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>values<span class="token punctuation">,</span> timeperiod<span class="token operator">=</span><span class="token number">14</span><span class="token punctuation">)</span>    <span class="token comment"># 5. MACD</span>    df<span class="token punctuation">[</span><span class="token string">'ema_12'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'close'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>ewm<span class="token punctuation">(</span>span<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">,</span> adjust<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span>    df<span class="token punctuation">[</span><span class="token string">'ema_26'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'close'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>ewm<span class="token punctuation">(</span>span<span class="token operator">=</span><span class="token number">26</span><span class="token punctuation">,</span> adjust<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span>    df<span class="token punctuation">[</span><span class="token string">'macd_custom'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'ema_12'</span><span class="token punctuation">]</span> <span class="token operator">-</span> df<span class="token punctuation">[</span><span class="token string">'ema_26'</span><span class="token punctuation">]</span>    df<span class="token punctuation">[</span><span class="token string">'macd_signal_custom'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'macd_custom'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>ewm<span class="token punctuation">(</span>span<span class="token operator">=</span><span class="token number">9</span><span class="token punctuation">,</span> adjust<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span>    df<span class="token punctuation">[</span><span class="token string">'macd_hist_custom'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'macd_custom'</span><span class="token punctuation">]</span> <span class="token operator">-</span> df<span class="token punctuation">[</span><span class="token string">'macd_signal_custom'</span><span class="token punctuation">]</span>    df<span class="token punctuation">[</span><span class="token string">'ta_macd'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> df<span class="token punctuation">[</span><span class="token string">'ta_macd_signal'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> df<span class="token punctuation">[</span><span class="token string">'ta_macd_hist'</span><span class="token punctuation">]</span> <span class="token operator">=</span> ta<span class="token punctuation">.</span>MACD<span class="token punctuation">(</span>        df<span class="token punctuation">[</span><span class="token string">'close'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>values<span class="token punctuation">,</span> fastperiod<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">,</span> slowperiod<span class="token operator">=</span><span class="token number">26</span><span class="token punctuation">,</span> signalperiod<span class="token operator">=</span><span class="token number">9</span><span class="token punctuation">)</span>    <span class="token comment"># 6. Bollinger Bands</span>    df<span class="token punctuation">[</span><span class="token string">'ta_boll_upper'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> df<span class="token punctuation">[</span><span class="token string">'ta_boll_middle'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> df<span class="token punctuation">[</span><span class="token string">'ta_boll_lower'</span><span class="token punctuation">]</span> <span class="token operator">=</span> ta<span class="token punctuation">.</span>BBANDS<span class="token punctuation">(</span>        df<span class="token punctuation">[</span><span class="token string">'close'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>values<span class="token punctuation">,</span> timeperiod<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">)</span>    <span class="token comment"># 7. ADX</span>    df<span class="token punctuation">[</span><span class="token string">'ta_adx'</span><span class="token punctuation">]</span> <span class="token operator">=</span> ta<span class="token punctuation">.</span>ADX<span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">'high'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>values<span class="token punctuation">,</span> df<span class="token punctuation">[</span><span class="token string">'low'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>values<span class="token punctuation">,</span> df<span class="token punctuation">[</span><span class="token string">'close'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>values<span class="token punctuation">,</span> timeperiod<span class="token operator">=</span><span class="token number">14</span><span class="token punctuation">)</span>    <span class="token comment"># 8. OBV</span>    df<span class="token punctuation">[</span><span class="token string">'ta_obv'</span><span class="token punctuation">]</span> <span class="token operator">=</span> ta<span class="token punctuation">.</span>OBV<span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">'close'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>values<span class="token punctuation">,</span> df<span class="token punctuation">[</span><span class="token string">'volume'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>values<span class="token punctuation">)</span>    <span class="token comment"># 9. 慢速KD</span>    slowk<span class="token punctuation">,</span> slowd <span class="token operator">=</span> ta<span class="token punctuation">.</span>STOCH<span class="token punctuation">(</span>        df<span class="token punctuation">[</span><span class="token string">'high'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>values<span class="token punctuation">,</span> df<span class="token punctuation">[</span><span class="token string">'low'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>values<span class="token punctuation">,</span> df<span class="token punctuation">[</span><span class="token string">'close'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>values<span class="token punctuation">,</span>        fastk_period<span class="token operator">=</span><span class="token number">14</span><span class="token punctuation">,</span> slowk_period<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> slowk_matype<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>        slowd_period<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> slowd_matype<span class="token operator">=</span><span class="token number">0</span>    <span class="token punctuation">)</span>    df<span class="token punctuation">[</span><span class="token string">'ta_stoch_slowk'</span><span class="token punctuation">]</span> <span class="token operator">=</span> slowk    df<span class="token punctuation">[</span><span class="token string">'ta_stoch_slowd'</span><span class="token punctuation">]</span> <span class="token operator">=</span> slowd    <span class="token comment"># 10. CCI</span>    df<span class="token punctuation">[</span><span class="token string">'ta_cci'</span><span class="token punctuation">]</span> <span class="token operator">=</span> ta<span class="token punctuation">.</span>CCI<span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">'high'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>values<span class="token punctuation">,</span> df<span class="token punctuation">[</span><span class="token string">'low'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>values<span class="token punctuation">,</span> df<span class="token punctuation">[</span><span class="token string">'close'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>values<span class="token punctuation">,</span> timeperiod<span class="token operator">=</span><span class="token number">14</span><span class="token punctuation">)</span>    <span class="token comment"># 11. Momentum</span>    df<span class="token punctuation">[</span><span class="token string">'ta_mom'</span><span class="token punctuation">]</span> <span class="token operator">=</span> ta<span class="token punctuation">.</span>MOM<span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">'close'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>values<span class="token punctuation">,</span> timeperiod<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>    <span class="token comment"># 12. ATR</span>    df<span class="token punctuation">[</span><span class="token string">'ta_atr'</span><span class="token punctuation">]</span> <span class="token operator">=</span> ta<span class="token punctuation">.</span>ATR<span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">'high'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>values<span class="token punctuation">,</span> df<span class="token punctuation">[</span><span class="token string">'low'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>values<span class="token punctuation">,</span> df<span class="token punctuation">[</span><span class="token string">'close'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>values<span class="token punctuation">,</span> timeperiod<span class="token operator">=</span><span class="token number">14</span><span class="token punctuation">)</span>    <span class="token comment"># 13. MFI</span>    df<span class="token punctuation">[</span><span class="token string">'ta_mfi'</span><span class="token punctuation">]</span> <span class="token operator">=</span> ta<span class="token punctuation">.</span>MFI<span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">'high'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>values<span class="token punctuation">,</span> df<span class="token punctuation">[</span><span class="token string">'low'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>values<span class="token punctuation">,</span> df<span class="token punctuation">[</span><span class="token string">'close'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>values<span class="token punctuation">,</span>                          df<span class="token punctuation">[</span><span class="token string">'volume'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>values<span class="token punctuation">,</span> timeperiod<span class="token operator">=</span><span class="token number">14</span><span class="token punctuation">)</span>    <span class="token comment"># 14. PPO</span>    df<span class="token punctuation">[</span><span class="token string">'ta_ppo'</span><span class="token punctuation">]</span> <span class="token operator">=</span> ta<span class="token punctuation">.</span>PPO<span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">'close'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>values<span class="token punctuation">,</span> fastperiod<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">,</span> slowperiod<span class="token operator">=</span><span class="token number">26</span><span class="token punctuation">,</span> matype<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>    <span class="token comment"># 15. ROC</span>    df<span class="token punctuation">[</span><span class="token string">'ta_roc'</span><span class="token punctuation">]</span> <span class="token operator">=</span> ta<span class="token punctuation">.</span>ROC<span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">'close'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>values<span class="token punctuation">,</span> timeperiod<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>    <span class="token comment"># 16. TRIX</span>    df<span class="token punctuation">[</span><span class="token string">'ta_trix'</span><span class="token punctuation">]</span> <span class="token operator">=</span> ta<span class="token punctuation">.</span>TRIX<span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">'close'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>values<span class="token punctuation">,</span> timeperiod<span class="token operator">=</span><span class="token number">15</span><span class="token punctuation">)</span>    <span class="token comment"># 17. Williams %R</span>    df<span class="token punctuation">[</span><span class="token string">'ta_willr'</span><span class="token punctuation">]</span> <span class="token operator">=</span> ta<span class="token punctuation">.</span>WILLR<span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">'high'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>values<span class="token punctuation">,</span> df<span class="token punctuation">[</span><span class="token string">'low'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>values<span class="token punctuation">,</span> df<span class="token punctuation">[</span><span class="token string">'close'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>values<span class="token punctuation">,</span> timeperiod<span class="token operator">=</span><span class="token number">14</span><span class="token punctuation">)</span>    <span class="token comment"># 18. StochRSI</span>    df<span class="token punctuation">[</span><span class="token string">'ta_stochrsi'</span><span class="token punctuation">]</span> <span class="token operator">=</span> ta<span class="token punctuation">.</span>STOCHRSI<span class="token punctuation">(</span>        df<span class="token punctuation">[</span><span class="token string">'close'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>values<span class="token punctuation">,</span> timeperiod<span class="token operator">=</span><span class="token number">14</span><span class="token punctuation">,</span>        fastk_period<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> fastd_period<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> fastd_matype<span class="token operator">=</span><span class="token number">0</span>    <span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    <span class="token comment"># 19. ULTOSC</span>    df<span class="token punctuation">[</span><span class="token string">'ta_ultosc'</span><span class="token punctuation">]</span> <span class="token operator">=</span> ta<span class="token punctuation">.</span>ULTOSC<span class="token punctuation">(</span>        df<span class="token punctuation">[</span><span class="token string">'high'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>values<span class="token punctuation">,</span> df<span class="token punctuation">[</span><span class="token string">'low'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>values<span class="token punctuation">,</span> df<span class="token punctuation">[</span><span class="token string">'close'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>values<span class="token punctuation">,</span>        timeperiod1<span class="token operator">=</span><span class="token number">7</span><span class="token punctuation">,</span> timeperiod2<span class="token operator">=</span><span class="token number">14</span><span class="token punctuation">,</span> timeperiod3<span class="token operator">=</span><span class="token number">28</span>    <span class="token punctuation">)</span>    <span class="token comment"># 20. Ichimoku</span>    <span class="token keyword">def</span> <span class="token function">compute_ichimoku</span><span class="token punctuation">(</span>high<span class="token punctuation">,</span> low<span class="token punctuation">)</span><span class="token punctuation">:</span>        high_series <span class="token operator">=</span> pd<span class="token punctuation">.</span>Series<span class="token punctuation">(</span>high<span class="token punctuation">)</span>        low_series <span class="token operator">=</span> pd<span class="token punctuation">.</span>Series<span class="token punctuation">(</span>low<span class="token punctuation">)</span>        tenkan <span class="token operator">=</span> <span class="token punctuation">(</span>high_series<span class="token punctuation">.</span>rolling<span class="token punctuation">(</span>window<span class="token operator">=</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">max</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> low_series<span class="token punctuation">.</span>rolling<span class="token punctuation">(</span>window<span class="token operator">=</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">min</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span>        kijun <span class="token operator">=</span> <span class="token punctuation">(</span>high_series<span class="token punctuation">.</span>rolling<span class="token punctuation">(</span>window<span class="token operator">=</span><span class="token number">26</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">max</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> low_series<span class="token punctuation">.</span>rolling<span class="token punctuation">(</span>window<span class="token operator">=</span><span class="token number">26</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">min</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span>        senkou_span_a <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>tenkan <span class="token operator">+</span> kijun<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span>shift<span class="token punctuation">(</span><span class="token number">26</span><span class="token punctuation">)</span>        senkou_span_b <span class="token operator">=</span> <span class="token punctuation">(</span>high_series<span class="token punctuation">.</span>rolling<span class="token punctuation">(</span>window<span class="token operator">=</span><span class="token number">52</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">max</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> low_series<span class="token punctuation">.</span>rolling<span class="token punctuation">(</span>window<span class="token operator">=</span><span class="token number">52</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">min</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span>        senkou_span_b <span class="token operator">=</span> senkou_span_b<span class="token punctuation">.</span>shift<span class="token punctuation">(</span><span class="token number">26</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> tenkan<span class="token punctuation">,</span> kijun<span class="token punctuation">,</span> senkou_span_a<span class="token punctuation">,</span> senkou_span_b    tenkan<span class="token punctuation">,</span> kijun<span class="token punctuation">,</span> senkou_a<span class="token punctuation">,</span> senkou_b <span class="token operator">=</span> compute_ichimoku<span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">'high'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>values<span class="token punctuation">,</span> df<span class="token punctuation">[</span><span class="token string">'low'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>values<span class="token punctuation">)</span>    df<span class="token punctuation">[</span><span class="token string">'ichi_tenkan'</span><span class="token punctuation">]</span> <span class="token operator">=</span> tenkan    df<span class="token punctuation">[</span><span class="token string">'ichi_kijun'</span><span class="token punctuation">]</span> <span class="token operator">=</span> kijun    df<span class="token punctuation">[</span><span class="token string">'ichi_senkou_a'</span><span class="token punctuation">]</span> <span class="token operator">=</span> senkou_a    df<span class="token punctuation">[</span><span class="token string">'ichi_senkou_b'</span><span class="token punctuation">]</span> <span class="token operator">=</span> senkou_b    <span class="token comment"># 21. 未来N日累积涨跌幅（预测目标）</span>    df<span class="token punctuation">[</span><span class="token string">'cum_return_future'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'close'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>pct_change<span class="token punctuation">(</span>periods<span class="token operator">=</span>prediction_window<span class="token punctuation">)</span><span class="token punctuation">.</span>shift<span class="token punctuation">(</span><span class="token operator">-</span>prediction_window<span class="token punctuation">)</span>    <span class="token comment"># 22. 52周range</span>    df<span class="token punctuation">[</span><span class="token string">'52w_high'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'close'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>rolling<span class="token punctuation">(</span>window<span class="token operator">=</span><span class="token number">252</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">max</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    df<span class="token punctuation">[</span><span class="token string">'52w_low'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'close'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>rolling<span class="token punctuation">(</span>window<span class="token operator">=</span><span class="token number">252</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">min</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    df<span class="token punctuation">[</span><span class="token string">'range_52w'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">'close'</span><span class="token punctuation">]</span> <span class="token operator">-</span> df<span class="token punctuation">[</span><span class="token string">'52w_low'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">'52w_high'</span><span class="token punctuation">]</span> <span class="token operator">-</span> df<span class="token punctuation">[</span><span class="token string">'52w_low'</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1e-8</span><span class="token punctuation">)</span>    <span class="token comment"># 23. PE (示例)</span>    df<span class="token punctuation">[</span><span class="token string">'pe'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">15</span>    <span class="token comment"># 24. 换手率</span>    df<span class="token punctuation">[</span><span class="token string">'vol_ma_20'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'volume'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>rolling<span class="token punctuation">(</span>window<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">.</span>mean<span class="token punctuation">(</span><span class="token punctuation">)</span>    df<span class="token punctuation">[</span><span class="token string">'turnover'</span><span class="token punctuation">]</span> <span class="token operator">=</span> df<span class="token punctuation">[</span><span class="token string">'volume'</span><span class="token punctuation">]</span> <span class="token operator">/</span> <span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">'vol_ma_20'</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1e-8</span><span class="token punctuation">)</span>    <span class="token comment"># 标签：未来累计涨幅超过1%为正样本</span>    df<span class="token punctuation">[</span><span class="token string">'label'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>df<span class="token punctuation">[</span><span class="token string">'cum_return_future'</span><span class="token punctuation">]</span> <span class="token operator">></span> <span class="token number">0.01</span><span class="token punctuation">)</span><span class="token punctuation">.</span>astype<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">)</span>    df <span class="token operator">=</span> df<span class="token punctuation">.</span>fillna<span class="token punctuation">(</span>method<span class="token operator">=</span><span class="token string">'ffill'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>fillna<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>    feature_cols <span class="token operator">=</span> <span class="token punctuation">[</span>col <span class="token keyword">for</span> col <span class="token keyword">in</span> df<span class="token punctuation">.</span>columns <span class="token keyword">if</span> col <span class="token keyword">not</span> <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token string">'label'</span><span class="token punctuation">,</span> <span class="token string">'cum_return_future'</span><span class="token punctuation">,</span> <span class="token string">'daily_return'</span><span class="token punctuation">]</span><span class="token punctuation">]</span>    df <span class="token operator">=</span> df<span class="token punctuation">[</span>feature_cols <span class="token operator">+</span> <span class="token punctuation">[</span><span class="token string">'label'</span><span class="token punctuation">,</span> <span class="token string">'cum_return_future'</span><span class="token punctuation">,</span> <span class="token string">'daily_return'</span><span class="token punctuation">]</span><span class="token punctuation">]</span>    df <span class="token operator">=</span> df<span class="token punctuation">.</span>fillna<span class="token punctuation">(</span>method<span class="token operator">=</span><span class="token string">'ffill'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>fillna<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> df<span class="token punctuation">,</span> feature_cols<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>特征上用到都是比较基础统计类的特征，时序相关的还没开，实际上如果开发时序类特征，lstm+transformer的效果会好很多</p><h4 id="主程序"><a href="#主程序" class="headerlink" title="主程序"></a>主程序</h4><p>策略上就是止盈止损+一些回撤止盈，比较简单就不写了，然后下面是代码主入口</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># ----------------------- 主程序 -----------------------</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    cerebro <span class="token operator">=</span> bt<span class="token punctuation">.</span>Cerebro<span class="token punctuation">(</span><span class="token punctuation">)</span>    symbol <span class="token operator">=</span> <span class="token string">'600519'</span>    stock_data <span class="token operator">=</span> fetch_akshare_data<span class="token punctuation">(</span>        symbol<span class="token operator">=</span>symbol<span class="token punctuation">,</span>        start_date<span class="token operator">=</span>pd<span class="token punctuation">.</span>to_datetime<span class="token punctuation">(</span><span class="token string">'2018-01-01'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        end_date<span class="token operator">=</span>pd<span class="token punctuation">.</span>to_datetime<span class="token punctuation">(</span><span class="token string">'2025-03-01'</span><span class="token punctuation">)</span>    <span class="token punctuation">)</span>    logger<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">"\n[数据样例]"</span><span class="token punctuation">)</span>    logger<span class="token punctuation">.</span>info<span class="token punctuation">(</span>stock_data<span class="token punctuation">.</span>head<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    logger<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"\n数据时间范围: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>stock_data<span class="token punctuation">.</span>index<span class="token punctuation">.</span><span class="token builtin">min</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string"> ~ </span><span class="token interpolation"><span class="token punctuation">&#123;</span>stock_data<span class="token punctuation">.</span>index<span class="token punctuation">.</span><span class="token builtin">max</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>    data <span class="token operator">=</span> bt<span class="token punctuation">.</span>feeds<span class="token punctuation">.</span>PandasData<span class="token punctuation">(</span>        dataname<span class="token operator">=</span>stock_data<span class="token punctuation">,</span>        <span class="token builtin">open</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> high<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> low<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> close<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> volume<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">,</span> openinterest<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span>    <span class="token punctuation">)</span>    cerebro<span class="token punctuation">.</span>adddata<span class="token punctuation">(</span>data<span class="token punctuation">)</span>    cerebro<span class="token punctuation">.</span>addstrategy<span class="token punctuation">(</span>        MLStrategy<span class="token punctuation">,</span>        training_period<span class="token operator">=</span><span class="token number">504</span><span class="token punctuation">,</span>        prediction_window<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span>        probability_threshold<span class="token operator">=</span><span class="token number">0.65</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span>    cerebro<span class="token punctuation">.</span>broker<span class="token punctuation">.</span>setcash<span class="token punctuation">(</span><span class="token number">1_000_000</span><span class="token punctuation">)</span>    cerebro<span class="token punctuation">.</span>broker<span class="token punctuation">.</span>setcommission<span class="token punctuation">(</span>commission<span class="token operator">=</span><span class="token number">0.001</span><span class="token punctuation">)</span>    cerebro<span class="token punctuation">.</span>addanalyzer<span class="token punctuation">(</span>bt<span class="token punctuation">.</span>analyzers<span class="token punctuation">.</span>PyFolio<span class="token punctuation">,</span> _name<span class="token operator">=</span><span class="token string">'pyfolio'</span><span class="token punctuation">)</span>    cerebro<span class="token punctuation">.</span>addanalyzer<span class="token punctuation">(</span>bt<span class="token punctuation">.</span>analyzers<span class="token punctuation">.</span>SharpeRatio<span class="token punctuation">,</span> riskfreerate<span class="token operator">=</span><span class="token number">0.0</span><span class="token punctuation">,</span> annualize<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>                        timeframe<span class="token operator">=</span>bt<span class="token punctuation">.</span>TimeFrame<span class="token punctuation">.</span>Days<span class="token punctuation">,</span> _name<span class="token operator">=</span><span class="token string">'sharpe'</span><span class="token punctuation">)</span>    cerebro<span class="token punctuation">.</span>addanalyzer<span class="token punctuation">(</span>bt<span class="token punctuation">.</span>analyzers<span class="token punctuation">.</span>DrawDown<span class="token punctuation">,</span> _name<span class="token operator">=</span><span class="token string">'drawdown'</span><span class="token punctuation">)</span>    cerebro<span class="token punctuation">.</span>addanalyzer<span class="token punctuation">(</span>bt<span class="token punctuation">.</span>analyzers<span class="token punctuation">.</span>TradeAnalyzer<span class="token punctuation">,</span> _name<span class="token operator">=</span><span class="token string">'trade_analyzer'</span><span class="token punctuation">)</span>    cerebro<span class="token punctuation">.</span>addanalyzer<span class="token punctuation">(</span>bt<span class="token punctuation">.</span>analyzers<span class="token punctuation">.</span>TimeReturn<span class="token punctuation">,</span> timeframe<span class="token operator">=</span>bt<span class="token punctuation">.</span>TimeFrame<span class="token punctuation">.</span>Days<span class="token punctuation">,</span> _name<span class="token operator">=</span><span class="token string">'time_return'</span><span class="token punctuation">)</span>    logger<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">"\n启动回测..."</span><span class="token punctuation">)</span>    results <span class="token operator">=</span> cerebro<span class="token punctuation">.</span>run<span class="token punctuation">(</span><span class="token punctuation">)</span>    strat <span class="token operator">=</span> results<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    final_value <span class="token operator">=</span> cerebro<span class="token punctuation">.</span>broker<span class="token punctuation">.</span>getvalue<span class="token punctuation">(</span><span class="token punctuation">)</span>    logger<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"\n最终资金: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>final_value<span class="token punctuation">:</span><span class="token format-spec">,.2f</span><span class="token punctuation">&#125;</span></span><span class="token string"> CNY"</span></span><span class="token punctuation">)</span>    sharpe <span class="token operator">=</span> strat<span class="token punctuation">.</span>analyzers<span class="token punctuation">.</span>sharpe<span class="token punctuation">.</span>get_analysis<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> sharpe<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'sharperatio'</span><span class="token punctuation">)</span> <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>        logger<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"年化夏普比率: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>sharpe<span class="token punctuation">[</span><span class="token string">'sharperatio'</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        logger<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">"年化夏普比率: N/A"</span><span class="token punctuation">)</span>    drawdown <span class="token operator">=</span> strat<span class="token punctuation">.</span>analyzers<span class="token punctuation">.</span>drawdown<span class="token punctuation">.</span>get_analysis<span class="token punctuation">(</span><span class="token punctuation">)</span>    logger<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"最大回撤: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>drawdown<span class="token punctuation">[</span><span class="token string">'max'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'drawdown'</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token format-spec">.2f</span><span class="token punctuation">&#125;</span></span><span class="token string">% (持续 </span><span class="token interpolation"><span class="token punctuation">&#123;</span>drawdown<span class="token punctuation">[</span><span class="token string">'max'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'len'</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span></span><span class="token string"> 天)"</span></span><span class="token punctuation">)</span>    trade_analyzer <span class="token operator">=</span> strat<span class="token punctuation">.</span>analyzers<span class="token punctuation">.</span>trade_analyzer<span class="token punctuation">.</span>get_analysis<span class="token punctuation">(</span><span class="token punctuation">)</span>    logger<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">"\n交易统计: %s"</span><span class="token punctuation">,</span> trade_analyzer<span class="token punctuation">)</span>    time_return <span class="token operator">=</span> strat<span class="token punctuation">.</span>analyzers<span class="token punctuation">.</span>time_return<span class="token punctuation">.</span>get_analysis<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>time_return<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">:</span>        daily_returns <span class="token operator">=</span> pd<span class="token punctuation">.</span>Series<span class="token punctuation">(</span>time_return<span class="token punctuation">)</span>        total_ret <span class="token operator">=</span> <span class="token punctuation">(</span>daily_returns <span class="token operator">+</span> <span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">.</span>prod<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1.0</span>        days <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>daily_returns<span class="token punctuation">)</span>        annual_ret <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">+</span> total_ret<span class="token punctuation">)</span><span class="token operator">**</span><span class="token punctuation">(</span><span class="token number">252</span><span class="token operator">/</span>days<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span> <span class="token keyword">if</span> days <span class="token operator">></span> <span class="token number">0</span> <span class="token keyword">else</span> <span class="token boolean">None</span>        <span class="token keyword">if</span> annual_ret <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>            logger<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"年化收益率: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>annual_ret<span class="token punctuation">:</span><span class="token format-spec">.2%</span><span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            logger<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">"无法计算年化收益率"</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        logger<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">"time_return结果为空，无法计算年化收益率"</span><span class="token punctuation">)</span>    figs <span class="token operator">=</span> cerebro<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>style<span class="token operator">=</span><span class="token string">'candlestick'</span><span class="token punctuation">,</span> volume<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> barup<span class="token operator">=</span><span class="token string">'red'</span><span class="token punctuation">,</span> bardown<span class="token operator">=</span><span class="token string">'green'</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> figs <span class="token keyword">and</span> figs<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">:</span>        fig <span class="token operator">=</span> figs<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>        fig<span class="token punctuation">.</span>savefig<span class="token punctuation">(</span><span class="token string">"backtrader_plot.png"</span><span class="token punctuation">)</span>        logger<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">"图形已保存为 backtrader_plot.png"</span><span class="token punctuation">)</span>    plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="下一步计划"><a href="#下一步计划" class="headerlink" title="下一步计划"></a>下一步计划</h3><ol><li>构造特征要加强，要筛选出更多的因子，这次只是实验，所以因子挑选的比较简单</li><li>模型结构可以调整一下，深度和注意力可以加多</li><li>gnn再尝试一下，板块内部的股票实际上是有关联的</li></ol><p>当然这个代码非常粗糙，仅作为学习记录，如果有建议和不足请大家指正</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h3&gt;&lt;p&gt;最近在港股美股上的收益还可以，但是在择时能力上感觉靠人的判断没有特别的准确，希望通过量化的方式去帮助择时，也不希望做高频，只希望高抛低吸做t</summary>
      
    
    
    
    <category term="技术文章" scheme="https://miaohancheng.github.io/categories/%E6%8A%80%E6%9C%AF%E6%96%87%E7%AB%A0/"/>
    
    
    <category term="deep learning" scheme="https://miaohancheng.github.io/tags/deep-learning/"/>
    
    <category term="python" scheme="https://miaohancheng.github.io/tags/python/"/>
    
    <category term="machine learning" scheme="https://miaohancheng.github.io/tags/machine-learning/"/>
    
    <category term="quant trading" scheme="https://miaohancheng.github.io/tags/quant-trading/"/>
    
  </entry>
  
  <entry>
    <title>美国绿卡流程记录</title>
    <link href="https://miaohancheng.github.io/2024/12/01/%E7%BE%8E%E5%9B%BD%E7%BB%BF%E5%8D%A1%E6%B5%81%E7%A8%8B%E8%AE%B0%E5%BD%95/"/>
    <id>https://miaohancheng.github.io/2024/12/01/%E7%BE%8E%E5%9B%BD%E7%BB%BF%E5%8D%A1%E6%B5%81%E7%A8%8B%E8%AE%B0%E5%BD%95/</id>
    <published>2024-12-01T21:00:00.000Z</published>
    <updated>2025-03-09T13:34:37.538Z</updated>
    
    <content type="html"><![CDATA[<h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><p>主要介绍一下我在国内申请NIW，从开始准备材料到美国移民局通过审核的所有流程，现在排期还未排到，如果排到之后再更新面试、拿卡等流程。</p><h3 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h3><p>主要是因为covid-19的封控问题，导致想换个国家生活工作一段时间，但是已经错过了留学留在国外工作的时间，而美国公司直接招聘海外员工发放h1b的情况又比较少；</p><p>其实可行的路就剩下两条：</p><ol><li>国内直接找到可以rebase到海外的外企，比如google、amd这些</li><li>国内直接申请绿卡，拿到卡之后出去</li></ol><h3 id="准备申请"><a href="#准备申请" class="headerlink" title="准备申请"></a>准备申请</h3><h4 id="前期调研"><a href="#前期调研" class="headerlink" title="前期调研"></a>前期调研</h4><p>首先查询了相关案例，发现有NIW、EB1A 两条路可以直接人在美国境外申请绿卡（无需雇主担保），两个要求、排期各不相同，两种类型具体介绍如下：</p><ul><li><p><a href="https://zhuanlan.zhihu.com/p/652960567?zpf=1695417255872118784">NIW</a> (这个介绍也算是广告，大家自行甄别)</p></li><li><p><a href="https://zhuanlan.zhihu.com/p/578761321">EB1A</a>(这个介绍也算是广告，大家自行甄别)</p></li></ul><p>一开始是准备DIY，然后找了一个美国的移民律师咨询了NIW、EB1A等情况，咨询费200美元&#x2F;小时；</p><p>发现自己的情况在NIW的条件下勉强及格，EB1A的话目前还不达标，所以放弃了EB1A，专心搞NIW；</p><h4 id="寻找中介"><a href="#寻找中介" class="headerlink" title="寻找中介"></a>寻找中介</h4><p>我和律师发现自己申请材料的缺陷主要是两点，一个是美国相关的专业人士推荐信不够；另外是行业内的影响力不够，这点靠自己DIY比较困难，所以还是想了下决定找中介来做这个项目；</p><p>知乎、搜索之类的加了好几个中介，发了多份材料之后，选定了一个中介来帮我找到律师写整个申请材料；</p><p>其中自己要准备的材料非常多，下面列举一些：</p><ol><li>薪资收入证明</li><li>在职证明</li><li>学历信息证明</li><li>专利信息</li><li>各种行业相关证书</li><li>新闻稿和发表论文等</li></ol><p>整体准备材料到律师完成，递交给美国移民局 耗时：10个月，其中因为疫情上海封控了一段时间，一般也是需要半年左右，很多材料可能手头都没有，还要去找和去学校、公司开具；</p><h3 id="移民局审核"><a href="#移民局审核" class="headerlink" title="移民局审核"></a>移民局审核</h3><p>在律师完成所有的文件翻译、审核、校对之后，要求付清翻译费之类的费用，会直接帮我递交材料</p><p>递交时间：2023-4</p><img src="https://github.com/miaohancheng/picx-images-hosting/raw/master/pics/niw-recipet.wilm8fufg.jpg" alt="递件凭证" style="zoom:33%;" /><p>中介反馈一般审批时间是半年左右</p><p>等到了2023-9，收到了获批函，证明我的NIW申请第一步已经基本完成，后续等待排期；</p><h3 id="等待排期"><a href="#等待排期" class="headerlink" title="等待排期"></a>等待排期</h3><p>等待排期是比较漫长的，主要是没什么进展，一年可能就前进6个月左右；</p><p>现在每晚1年申请绿卡，就要晚2年拿到。</p><p>查看排期的比较好用的网站推荐：<a href="https://visa.careerengine.us/">https://visa.careerengine.us/</a> （可以自己定好自己的pd）</p><p><img src="https://github.com/miaohancheng/picx-images-hosting/raw/master/pics/%E6%8E%92%E6%9C%9F%E8%A1%A8.73tzmehatm.jpg" alt="排期表"></p><h3 id="待更新后续"><a href="#待更新后续" class="headerlink" title="待更新后续"></a>待更新后续</h3><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>这个总体项目还是比较长的，建议大家如果有打算要尽早行动，早做准备。</p><p>同时也是耗时耗精力，还会有很多意外、补充材料的情况。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h3&gt;&lt;p&gt;主要介绍一下我在国内申请NIW，从开始准备材料到美国移民局通过审核的所有流程，现在排期还未排到，如果排到之后再更新面试、拿卡等流程。&lt;/p&gt;</summary>
      
    
    
    
    <category term="留学移民" scheme="https://miaohancheng.github.io/categories/%E7%95%99%E5%AD%A6%E7%A7%BB%E6%B0%91/"/>
    
    
    <category term="NIW" scheme="https://miaohancheng.github.io/tags/NIW/"/>
    
    <category term="美国绿卡" scheme="https://miaohancheng.github.io/tags/%E7%BE%8E%E5%9B%BD%E7%BB%BF%E5%8D%A1/"/>
    
  </entry>
  
  <entry>
    <title>多语言NER模型微调</title>
    <link href="https://miaohancheng.github.io/2024/11/29/%E5%A4%9A%E8%AF%AD%E8%A8%80NER%E6%A8%A1%E5%9E%8B%E5%BE%AE%E8%B0%83/"/>
    <id>https://miaohancheng.github.io/2024/11/29/%E5%A4%9A%E8%AF%AD%E8%A8%80NER%E6%A8%A1%E5%9E%8B%E5%BE%AE%E8%B0%83/</id>
    <published>2024-11-29T15:00:00.000Z</published>
    <updated>2025-03-09T13:34:37.537Z</updated>
    
    <content type="html"><![CDATA[<h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>工作中有遇到多语言的地址、短句等数据，需要标注出其中人名、快递公司、电话等信息，现有的开源数据集中这部分数据较少，主要问题是要自己构建对应的数据集、以及对于开源通过wiki训练的模型要尽可能保留训练的经验</p><h3 id="模型选取"><a href="#模型选取" class="headerlink" title="模型选取"></a>模型选取</h3><p>选择了RoBERTa基于 <a href="https://huggingface.co/datasets/unimelb-nlp/wikiann"><strong>wikiann</strong></a> 预训练的模型 <a href="https://huggingface.co/julian-schelb/roberta-ner-multilingual"><strong>roberta-ner-multilingual</strong></a>，对于现实中的知识已经有一部分理解，但是对于地址等信息知识较少需要额外训练；</p><p>最原始的基座模型是facebook的 <a href="https://huggingface.co/FacebookAI/xlm-roberta-large"><strong>xlm-roberta-large</strong></a></p><h3 id="数据准备"><a href="#数据准备" class="headerlink" title="数据准备"></a>数据准备</h3><p>准备了训练和测试数据集放在了 <code>./data</code>目录下，数据大致格式如下</p><pre class="line-numbers language-json" data-language="json"><code class="language-json">John    B-PERlives   Oin      OBerlin  B-LOC.      O他      O住      O在      O北京    B-LOC。      O<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>通过不同的标签定义不同的实体，在模型训练中可以通过单一语言的样本迁移一部分知识到其他语言，这也是多语言模型的一个优势。</p><h3 id="模型加载"><a href="#模型加载" class="headerlink" title="模型加载"></a>模型加载</h3><p>因为我在本机mac上训练，后续迁移到服务器上，所以写了判断设备的代码</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> torch<span class="token keyword">from</span> transformers <span class="token keyword">import</span> AutoTokenizer<span class="token punctuation">,</span> AutoModelForTokenClassification<span class="token punctuation">,</span> Trainer<span class="token punctuation">,</span> TrainingArguments<span class="token keyword">from</span> transformers <span class="token keyword">import</span> DataCollatorForTokenClassification<span class="token keyword">from</span> datasets <span class="token keyword">import</span> Dataset<span class="token punctuation">,</span> DatasetDict<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> evaluate<span class="token keyword">from</span> torch <span class="token keyword">import</span> nn<span class="token keyword">import</span> torch<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>functional <span class="token keyword">as</span> Fdevice <span class="token operator">=</span> torch<span class="token punctuation">.</span>device<span class="token punctuation">(</span><span class="token string">'cuda'</span> <span class="token keyword">if</span> torch<span class="token punctuation">.</span>cuda<span class="token punctuation">.</span>is_available<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">else</span> <span class="token string">'cpu'</span><span class="token punctuation">)</span><span class="token comment"># 确定设备</span><span class="token keyword">if</span> torch<span class="token punctuation">.</span>cuda<span class="token punctuation">.</span>is_available<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    device <span class="token operator">=</span> torch<span class="token punctuation">.</span>device<span class="token punctuation">(</span><span class="token string">'cuda'</span><span class="token punctuation">)</span><span class="token keyword">elif</span> torch<span class="token punctuation">.</span>backends<span class="token punctuation">.</span>mps<span class="token punctuation">.</span>is_available<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    device <span class="token operator">=</span> torch<span class="token punctuation">.</span>device<span class="token punctuation">(</span><span class="token string">'mps'</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    device <span class="token operator">=</span> torch<span class="token punctuation">.</span>device<span class="token punctuation">(</span><span class="token string">'cpu'</span><span class="token punctuation">)</span><span class="token comment"># 加载分词器和模型</span>tokenizer <span class="token operator">=</span> AutoTokenizer<span class="token punctuation">.</span>from_pretrained<span class="token punctuation">(</span><span class="token string">"julian-schelb/roberta-ner-multilingual"</span><span class="token punctuation">,</span> add_prefix_space<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>model <span class="token operator">=</span> AutoModelForTokenClassification<span class="token punctuation">.</span>from_pretrained<span class="token punctuation">(</span><span class="token string">"julian-schelb/roberta-ner-multilingual"</span><span class="token punctuation">)</span>model<span class="token punctuation">.</span>to<span class="token punctuation">(</span>device<span class="token punctuation">)</span>  <span class="token comment"># 将模型移动到设备</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="增加标签"><a href="#增加标签" class="headerlink" title="增加标签"></a>增加标签</h3><p>原有的模型中标签类别较少，如果有新的标签可以手动添加</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 如果有新标签，更新标签列表和映射</span>original_labels <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>model<span class="token punctuation">.</span>config<span class="token punctuation">.</span>id2label<span class="token punctuation">.</span>values<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>new_labels <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'B-FACILITY'</span><span class="token punctuation">,</span><span class="token string">'I-FACILITY'</span> <span class="token punctuation">]</span> <span class="token comment"># 加入你新的标签即可</span>label_list <span class="token operator">=</span> original_labels <span class="token operator">+</span> new_labelslabel_to_id <span class="token operator">=</span> <span class="token punctuation">&#123;</span>label<span class="token punctuation">:</span> idx <span class="token keyword">for</span> idx<span class="token punctuation">,</span> label <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>label_list<span class="token punctuation">)</span><span class="token punctuation">&#125;</span>id_to_label <span class="token operator">=</span> <span class="token punctuation">&#123;</span>idx<span class="token punctuation">:</span> label <span class="token keyword">for</span> idx<span class="token punctuation">,</span> label <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>label_list<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>更新模型配置</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 更新模型配置</span>model<span class="token punctuation">.</span>config<span class="token punctuation">.</span>num_labels <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>label_list<span class="token punctuation">)</span>model<span class="token punctuation">.</span>config<span class="token punctuation">.</span>id2label <span class="token operator">=</span> id_to_labelmodel<span class="token punctuation">.</span>config<span class="token punctuation">.</span>label2id <span class="token operator">=</span> label_to_id<span class="token comment"># 替换分类层</span>model<span class="token punctuation">.</span>classifier <span class="token operator">=</span> nn<span class="token punctuation">.</span>Linear<span class="token punctuation">(</span>model<span class="token punctuation">.</span>config<span class="token punctuation">.</span>hidden_size<span class="token punctuation">,</span> model<span class="token punctuation">.</span>config<span class="token punctuation">.</span>num_labels<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="教师模型"><a href="#教师模型" class="headerlink" title="教师模型"></a>教师模型</h3><p>希望模型在学习新知识的前提下，不要遗忘旧知识，所以再增加一个教师模型来做监督</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 加载教师模型</span>teacher_model <span class="token operator">=</span> AutoModelForTokenClassification<span class="token punctuation">.</span>from_pretrained<span class="token punctuation">(</span><span class="token string">"julian-schelb/roberta-ner-multilingual"</span><span class="token punctuation">)</span>teacher_model<span class="token punctuation">.</span>to<span class="token punctuation">(</span>device<span class="token punctuation">)</span>  <span class="token comment"># 将教师模型移动到设备</span>teacher_model<span class="token punctuation">.</span><span class="token builtin">eval</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 可选：冻结学生模型的部分层</span><span class="token keyword">for</span> name<span class="token punctuation">,</span> param <span class="token keyword">in</span> model<span class="token punctuation">.</span>named_parameters<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> name<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">'roberta.embeddings'</span><span class="token punctuation">)</span> <span class="token keyword">or</span> name<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">'roberta.encoder.layer.0'</span><span class="token punctuation">)</span> <span class="token keyword">or</span> name<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">'roberta.encoder.layer.1'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        param<span class="token punctuation">.</span>requires_grad <span class="token operator">=</span> <span class="token boolean">False</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="加载数据"><a href="#加载数据" class="headerlink" title="加载数据"></a>加载数据</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 定义读取数据的函数</span><span class="token keyword">def</span> <span class="token function">read_conll_data</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span><span class="token punctuation">:</span>    tokens <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    ner_tags <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>        words <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        tags <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token keyword">for</span> line <span class="token keyword">in</span> f<span class="token punctuation">:</span>            line <span class="token operator">=</span> line<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">if</span> <span class="token keyword">not</span> line<span class="token punctuation">:</span>                <span class="token keyword">if</span> words<span class="token punctuation">:</span>                    tokens<span class="token punctuation">.</span>append<span class="token punctuation">(</span>words<span class="token punctuation">)</span>                    ner_tags<span class="token punctuation">.</span>append<span class="token punctuation">(</span>tags<span class="token punctuation">)</span>                    words <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>                    tags <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                splits <span class="token operator">=</span> line<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>splits<span class="token punctuation">)</span> <span class="token operator">>=</span> <span class="token number">2</span><span class="token punctuation">:</span>                    words<span class="token punctuation">.</span>append<span class="token punctuation">(</span>splits<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>                    tags<span class="token punctuation">.</span>append<span class="token punctuation">(</span>splits<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> words<span class="token punctuation">:</span>            tokens<span class="token punctuation">.</span>append<span class="token punctuation">(</span>words<span class="token punctuation">)</span>            ner_tags<span class="token punctuation">.</span>append<span class="token punctuation">(</span>tags<span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span><span class="token string">'tokens'</span><span class="token punctuation">:</span> tokens<span class="token punctuation">,</span> <span class="token string">'ner_tags'</span><span class="token punctuation">:</span> ner_tags<span class="token punctuation">&#125;</span><span class="token comment"># 加载您的数据</span>train_data <span class="token operator">=</span> read_conll_data<span class="token punctuation">(</span><span class="token string">'./data/train.txt'</span><span class="token punctuation">)</span>validation_data <span class="token operator">=</span> read_conll_data<span class="token punctuation">(</span><span class="token string">'./data/validation.txt'</span><span class="token punctuation">)</span>train_dataset <span class="token operator">=</span> Dataset<span class="token punctuation">.</span>from_dict<span class="token punctuation">(</span>train_data<span class="token punctuation">)</span>validation_dataset <span class="token operator">=</span> Dataset<span class="token punctuation">.</span>from_dict<span class="token punctuation">(</span>validation_data<span class="token punctuation">)</span><span class="token comment"># 创建数据集对象</span>datasets <span class="token operator">=</span> DatasetDict<span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token string">'train'</span><span class="token punctuation">:</span> train_dataset<span class="token punctuation">,</span> <span class="token string">'validation'</span><span class="token punctuation">:</span> validation_dataset<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="数据预处理"><a href="#数据预处理" class="headerlink" title="数据预处理"></a>数据预处理</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 定义数据预处理函数</span><span class="token keyword">def</span> <span class="token function">tokenize_and_align_labels</span><span class="token punctuation">(</span>examples<span class="token punctuation">)</span><span class="token punctuation">:</span>    tokenized_inputs <span class="token operator">=</span> tokenizer<span class="token punctuation">(</span>        examples<span class="token punctuation">[</span><span class="token string">'tokens'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        truncation<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>        is_split_into_words<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>        padding<span class="token operator">=</span><span class="token string">'longest'</span><span class="token punctuation">,</span>  <span class="token comment"># 启用填充</span>        max_length<span class="token operator">=</span><span class="token number">512</span><span class="token punctuation">,</span>     <span class="token comment"># 可根据需要调整</span>    <span class="token punctuation">)</span>    labels <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>tokenized_inputs<span class="token punctuation">[</span><span class="token string">'input_ids'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        word_ids <span class="token operator">=</span> tokenized_inputs<span class="token punctuation">.</span>word_ids<span class="token punctuation">(</span>batch_index<span class="token operator">=</span>i<span class="token punctuation">)</span>        label_ids <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        previous_word_idx <span class="token operator">=</span> <span class="token boolean">None</span>        <span class="token keyword">for</span> word_idx <span class="token keyword">in</span> word_ids<span class="token punctuation">:</span>            <span class="token keyword">if</span> word_idx <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>                label_ids<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">100</span><span class="token punctuation">)</span>            <span class="token keyword">elif</span> word_idx <span class="token operator">!=</span> previous_word_idx<span class="token punctuation">:</span>                label_ids<span class="token punctuation">.</span>append<span class="token punctuation">(</span>label_to_id<span class="token punctuation">.</span>get<span class="token punctuation">(</span>examples<span class="token punctuation">[</span><span class="token string">'ner_tags'</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>word_idx<span class="token punctuation">]</span><span class="token punctuation">,</span> label_to_id<span class="token punctuation">[</span><span class="token string">'O'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                label_ids<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">100</span><span class="token punctuation">)</span>            previous_word_idx <span class="token operator">=</span> word_idx        labels<span class="token punctuation">.</span>append<span class="token punctuation">(</span>label_ids<span class="token punctuation">)</span>    tokenized_inputs<span class="token punctuation">[</span><span class="token string">'labels'</span><span class="token punctuation">]</span> <span class="token operator">=</span> labels    <span class="token keyword">return</span> tokenized_inputs<span class="token comment"># 预处理数据</span>tokenized_datasets <span class="token operator">=</span> datasets<span class="token punctuation">.</span><span class="token builtin">map</span><span class="token punctuation">(</span>tokenize_and_align_labels<span class="token punctuation">,</span> batched<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="评估指标"><a href="#评估指标" class="headerlink" title="评估指标"></a>评估指标</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 加载评估指标</span>metric <span class="token operator">=</span> evaluate<span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token string">'seqeval'</span><span class="token punctuation">)</span><span class="token comment"># 定义评估函数</span><span class="token keyword">def</span> <span class="token function">compute_metrics</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">:</span>    predictions<span class="token punctuation">,</span> labels <span class="token operator">=</span> p    predictions <span class="token operator">=</span> np<span class="token punctuation">.</span>argmax<span class="token punctuation">(</span>predictions<span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>    true_labels <span class="token operator">=</span> <span class="token punctuation">[</span>        <span class="token punctuation">[</span>label_list<span class="token punctuation">[</span>l<span class="token punctuation">]</span> <span class="token keyword">for</span> l <span class="token keyword">in</span> label <span class="token keyword">if</span> l <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">100</span><span class="token punctuation">]</span>        <span class="token keyword">for</span> label <span class="token keyword">in</span> labels    <span class="token punctuation">]</span>    true_predictions <span class="token operator">=</span> <span class="token punctuation">[</span>        <span class="token punctuation">[</span>label_list<span class="token punctuation">[</span>pred<span class="token punctuation">]</span> <span class="token keyword">for</span> <span class="token punctuation">(</span>pred<span class="token punctuation">,</span> lab<span class="token punctuation">)</span> <span class="token keyword">in</span> <span class="token builtin">zip</span><span class="token punctuation">(</span>prediction<span class="token punctuation">,</span> label<span class="token punctuation">)</span> <span class="token keyword">if</span> lab <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">100</span><span class="token punctuation">]</span>        <span class="token keyword">for</span> prediction<span class="token punctuation">,</span> label <span class="token keyword">in</span> <span class="token builtin">zip</span><span class="token punctuation">(</span>predictions<span class="token punctuation">,</span> labels<span class="token punctuation">)</span>    <span class="token punctuation">]</span>    results <span class="token operator">=</span> metric<span class="token punctuation">.</span>compute<span class="token punctuation">(</span>predictions<span class="token operator">=</span>true_predictions<span class="token punctuation">,</span> references<span class="token operator">=</span>true_labels<span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>        <span class="token string">'precision'</span><span class="token punctuation">:</span> results<span class="token punctuation">[</span><span class="token string">'overall_precision'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">'recall'</span><span class="token punctuation">:</span> results<span class="token punctuation">[</span><span class="token string">'overall_recall'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">'f1'</span><span class="token punctuation">:</span> results<span class="token punctuation">[</span><span class="token string">'overall_f1'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">'accuracy'</span><span class="token punctuation">:</span> results<span class="token punctuation">[</span><span class="token string">'overall_accuracy'</span><span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span><span class="token comment"># 定义 DataCollator</span>data_collator <span class="token operator">=</span> DataCollatorForTokenClassification<span class="token punctuation">(</span>    tokenizer<span class="token punctuation">,</span>    padding<span class="token operator">=</span><span class="token string">'longest'</span><span class="token punctuation">,</span>    max_length<span class="token operator">=</span><span class="token number">512</span><span class="token punctuation">,</span>    return_tensors<span class="token operator">=</span><span class="token string">'pt'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="定义trainer"><a href="#定义trainer" class="headerlink" title="定义trainer"></a>定义trainer</h3><p>因为要做知识蒸馏，所以需要自定义trainer，结合教师模型的结果来做损失判定</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 定义自定义 Trainer，用于知识蒸馏</span><span class="token keyword">class</span> <span class="token class-name">DistillationTrainer</span><span class="token punctuation">(</span>Trainer<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> teacher_model<span class="token punctuation">,</span> temperature<span class="token operator">=</span><span class="token number">2.0</span><span class="token punctuation">,</span> alpha<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token builtin">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>teacher_model <span class="token operator">=</span> teacher_model        self<span class="token punctuation">.</span>temperature <span class="token operator">=</span> temperature        self<span class="token punctuation">.</span>alpha <span class="token operator">=</span> alpha        self<span class="token punctuation">.</span>teacher_model<span class="token punctuation">.</span><span class="token builtin">eval</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">compute_loss</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> model<span class="token punctuation">,</span> inputs<span class="token punctuation">,</span> return_outputs<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>        labels <span class="token operator">=</span> inputs<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token string">"labels"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">(</span>device<span class="token punctuation">)</span>        <span class="token keyword">for</span> k<span class="token punctuation">,</span> v <span class="token keyword">in</span> inputs<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            inputs<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> v<span class="token punctuation">.</span>to<span class="token punctuation">(</span>device<span class="token punctuation">)</span>        outputs <span class="token operator">=</span> model<span class="token punctuation">(</span><span class="token operator">**</span>inputs<span class="token punctuation">)</span>        student_logits <span class="token operator">=</span> outputs<span class="token punctuation">.</span>logits        <span class="token comment"># 计算学生模型的损失（交叉熵损失）</span>        loss_fct <span class="token operator">=</span> nn<span class="token punctuation">.</span>CrossEntropyLoss<span class="token punctuation">(</span><span class="token punctuation">)</span>        active_loss <span class="token operator">=</span> labels<span class="token punctuation">.</span>view<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">100</span>        active_logits <span class="token operator">=</span> student_logits<span class="token punctuation">.</span>view<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> self<span class="token punctuation">.</span>model<span class="token punctuation">.</span>config<span class="token punctuation">.</span>num_labels<span class="token punctuation">)</span><span class="token punctuation">[</span>active_loss<span class="token punctuation">]</span>        active_labels <span class="token operator">=</span> labels<span class="token punctuation">.</span>view<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">[</span>active_loss<span class="token punctuation">]</span>        student_loss <span class="token operator">=</span> loss_fct<span class="token punctuation">(</span>active_logits<span class="token punctuation">,</span> active_labels<span class="token punctuation">)</span>        <span class="token keyword">with</span> torch<span class="token punctuation">.</span>no_grad<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            teacher_outputs <span class="token operator">=</span> self<span class="token punctuation">.</span>teacher_model<span class="token punctuation">(</span><span class="token operator">**</span>inputs<span class="token punctuation">)</span>            teacher_logits <span class="token operator">=</span> teacher_outputs<span class="token punctuation">.</span>logits        <span class="token comment"># 提取学生模型中对应于原始标签的 logits</span>        num_labels_teacher <span class="token operator">=</span> teacher_logits<span class="token punctuation">.</span>size<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>  <span class="token comment"># 7</span>        student_logits_for_kd <span class="token operator">=</span> student_logits<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span>num_labels_teacher<span class="token punctuation">]</span>        <span class="token comment"># 计算蒸馏损失（KL 散度）</span>        loss_fct <span class="token operator">=</span> nn<span class="token punctuation">.</span>KLDivLoss<span class="token punctuation">(</span>reduction<span class="token operator">=</span><span class="token string">'batchmean'</span><span class="token punctuation">)</span>        student_logits_temp <span class="token operator">=</span> student_logits_for_kd <span class="token operator">/</span> self<span class="token punctuation">.</span>temperature        teacher_logits_temp <span class="token operator">=</span> teacher_logits <span class="token operator">/</span> self<span class="token punctuation">.</span>temperature        distillation_loss <span class="token operator">=</span> loss_fct<span class="token punctuation">(</span>            F<span class="token punctuation">.</span>log_softmax<span class="token punctuation">(</span>student_logits_temp<span class="token punctuation">,</span> dim<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            F<span class="token punctuation">.</span>softmax<span class="token punctuation">(</span>teacher_logits_temp<span class="token punctuation">,</span> dim<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>        <span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span>temperature <span class="token operator">**</span> <span class="token number">2</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Student logits shape:"</span><span class="token punctuation">,</span> student_logits<span class="token punctuation">.</span>shape<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Teacher logits shape:"</span><span class="token punctuation">,</span> teacher_logits<span class="token punctuation">.</span>shape<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Student logits for KD shape:"</span><span class="token punctuation">,</span> student_logits_for_kd<span class="token punctuation">.</span>shape<span class="token punctuation">)</span>        <span class="token comment"># 合并损失</span>        loss <span class="token operator">=</span> self<span class="token punctuation">.</span>alpha <span class="token operator">*</span> student_loss <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">-</span> self<span class="token punctuation">.</span>alpha<span class="token punctuation">)</span> <span class="token operator">*</span> distillation_loss        <span class="token keyword">return</span> <span class="token punctuation">(</span>loss<span class="token punctuation">,</span> outputs<span class="token punctuation">)</span> <span class="token keyword">if</span> return_outputs <span class="token keyword">else</span> loss<span class="token comment"># 定义训练参数，使用较小的学习率</span><span class="token comment"># 定义训练参数</span>training_args <span class="token operator">=</span> TrainingArguments<span class="token punctuation">(</span>    output_dir<span class="token operator">=</span><span class="token string">'./results'</span><span class="token punctuation">,</span>    num_train_epochs<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span>    per_device_train_batch_size<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">,</span>    per_device_eval_batch_size<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">,</span>    logging_dir<span class="token operator">=</span><span class="token string">'./logs'</span><span class="token punctuation">,</span>    evaluation_strategy<span class="token operator">=</span><span class="token string">"epoch"</span><span class="token punctuation">,</span>    save_strategy<span class="token operator">=</span><span class="token string">"epoch"</span><span class="token punctuation">,</span>    learning_rate<span class="token operator">=</span><span class="token number">3e-5</span><span class="token punctuation">,</span>    dataloader_pin_memory<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token comment"># 初始化自定义 Trainer</span>trainer <span class="token operator">=</span> DistillationTrainer<span class="token punctuation">(</span>    teacher_model<span class="token operator">=</span>teacher_model<span class="token punctuation">,</span>    model<span class="token operator">=</span>model<span class="token punctuation">,</span>    args<span class="token operator">=</span>training_args<span class="token punctuation">,</span>    train_dataset<span class="token operator">=</span>tokenized_datasets<span class="token punctuation">[</span><span class="token string">'train'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    eval_dataset<span class="token operator">=</span>tokenized_datasets<span class="token punctuation">[</span><span class="token string">'validation'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    compute_metrics<span class="token operator">=</span>compute_metrics<span class="token punctuation">,</span>    data_collator<span class="token operator">=</span>data_collator<span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token comment"># 开始训练</span>trainer<span class="token punctuation">.</span>train<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="最后保存模型"><a href="#最后保存模型" class="headerlink" title="最后保存模型"></a>最后保存模型</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 保存模型和分词器</span>trainer<span class="token punctuation">.</span>save_model<span class="token punctuation">(</span><span class="token string">'./my_trained_model'</span><span class="token punctuation">)</span>tokenizer<span class="token punctuation">.</span>save_pretrained<span class="token punctuation">(</span><span class="token string">'./my_trained_model'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h3><p>目前测试下来，如果整体数据集都是全新的数据，增加教师模型对于模型训练帮助不大，不如直接开始微调基座模型，因为标签和数据都是未曾见过的，教师模型无法给出建议，只会有干扰，但是这对于新数据和旧数据有一些重叠的情况会有所帮助。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h3&gt;&lt;p&gt;工作中有遇到多语言的地址、短句等数据，需要标注出其中人名、快递公司、电话等信息，现有的开源数据集中这部分数据较少，主要问题是要自己构建对应的</summary>
      
    
    
    
    <category term="技术文章" scheme="https://miaohancheng.github.io/categories/%E6%8A%80%E6%9C%AF%E6%96%87%E7%AB%A0/"/>
    
    
    <category term="deep learning" scheme="https://miaohancheng.github.io/tags/deep-learning/"/>
    
    <category term="python" scheme="https://miaohancheng.github.io/tags/python/"/>
    
    <category term="ner" scheme="https://miaohancheng.github.io/tags/ner/"/>
    
  </entry>
  
</feed>
